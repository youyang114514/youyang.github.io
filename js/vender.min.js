var charted = false;

function updateFast(scrollTop) {
var elm = document.getElementById('fast-svg');
var svg = elm.getSVGDocument();
var top = elm.offsetTop;

if (svg) {
    var parallaxTop = Math.max(0, scrollTop);
    svg.getElementById('Scrolled').setAttribute('transform', 'translate(0,'+(-Math.round(parallaxTop * 0.1))+')');
}

var chart = document.getElementsByClassName('comparison-bars')[0];
if (scrollTop > chart.offsetTop - window.innerHeight / 3*2 && !charted) {
    chart.className = 'comparison-bars';
    charted = true; 
}
}

var swiped = false;

function updateResponsive(scrollTop) {
var elm = document.getElementById('responsive-svg');
var svg = elm.getSVGDocument();

if (svg) {
    var top = elm.offsetTop;

    var parallaxTop = scrollTop - (top - window.innerHeight + 50);
    svg.getElementById('TabletScrolled').setAttribute('transform', 'translate(0,'+(-Math.round(parallaxTop * 0.1))+')');
    svg.getElementById('PhoneScrolled').setAttribute('transform', 'translate(0,'+(-Math.round(parallaxTop * 0.05))+')');

    var swipeTop = top - window.innerHeight / 3;
    if (scrollTop > swipeTop && !swiped) {
    svg.getElementById('AnimateOnScroll').beginElement();
    swiped = true;
    }
    else if (scrollTop < swipeTop && swiped) {
    svg.getElementById('AnimateOnScrollUndo').beginElement();
    swiped = false;
    }
}
}

var tooltips = [];
var powerful = document.getElementById('powerful-svg');
var tooltip = document.getElementById('tooltip');
var paused = true;
var powerfulInit = false;

function updatePowerful(scrollTop) {
if (scrollTop > powerful.offsetTop - window.innerHeight / 3 && !powerfulInit) {
    powerfulInit = true;

    setInterval(randomTooltip, 4000);
    randomTooltip();
}
}

function update() {
var scrollTop = window.pageYOffset;

updateFast(scrollTop);
updateResponsive(scrollTop);
updatePowerful(scrollTop);
}

function randomTooltip() {
if (paused) return;
var tt = tooltips[Math.floor(Math.random() * tooltips.length)];
showTooltip(tt);
setTimeout(function() { if (!paused) hideTooltip(); }, 3000);
}

function showTooltip(tt) {
var bb = tt[0];
tooltip.className = 'tooltip';
tooltip.innerHTML = tt[1];
tooltip.style.left = Math.round(powerful.offsetLeft + bb.left + bb.width / 2 - tooltip.offsetWidth / 2) + 'px';
tooltip.style.top = Math.round(powerful.offsetTop + bb.top - tooltip.offsetHeight - 15) + 'px';
}

function hideTooltip() {
tooltip.className = 'tooltip hidden';
}

powerful.onload = function() {
var svg = this.contentDocument;
paused = false;

var makeTooltip = function(id, text) {
    var elm = svg.getElementById(id);
    var bb = elm.getBoundingClientRect();
    tooltips.push([bb, text]);
};

makeTooltip('Cloud', '自动更新');
makeTooltip('Clock', '实时讨论');
makeTooltip('Key', '权限');
makeTooltip('Paintbrush', '容易切换主题');
makeTooltip('Trash', '删除');
makeTooltip('Link', 'SEO');
makeTooltip('Chart', '统计');
makeTooltip('Pin', '置顶');
makeTooltip('Bell', '通知');
makeTooltip('Bookmark', '书签');
makeTooltip('Help', '帮助');
makeTooltip('Cup', '奖励与排行榜');
makeTooltip('Lock', '锁定');
makeTooltip('Ban', 'Anti-SPAM');
makeTooltip('Share', '单点登录');
makeTooltip('Flag', '标志');
makeTooltip('Search', '搜索');
makeTooltip('Globe', '翻译');
makeTooltip('Image', '附件');
makeTooltip('Paragraph', 'Markdown');
makeTooltip('Star', '收藏');
makeTooltip('Tags', '标签');
makeTooltip('Tools', '高配置');
makeTooltip('Heart', '喜欢');
makeTooltip('Envelope', '私信');
makeTooltip('Keyboard', '快捷键');
makeTooltip('Pencil', '草稿');
makeTooltip('Comments', '回复');
makeTooltip('RSS', '推送通知');
makeTooltip('Floppy-Disk', '备份和恢复');

powerful.contentDocument.addEventListener('mousemove', function(e) {          
    if (!tooltips.some(function(tt) {
    var bb = tt[0];
    var centerX = bb.left + bb.width / 2;
    var centerY = bb.top + bb.height / 2;
    var width = 50;
    var height = 50;
    if (e.clientX > centerX - width / 2 && e.clientX < centerX + width / 2 && e.clientY > centerY - width / 2 && e.clientY < centerY + width / 2) {
        showTooltip(tt);              
        return true;
    }
    })) hideTooltip();
});
powerful.onmouseenter = function() { paused = true; };
powerful.onmouseleave = function() { paused = false; hideTooltip(); };
};

window.addEventListener('scroll', function() {
window.requestAnimationFrame(update);
});

update();